name: CI/CD

on:
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+*'

    branches:
      - master
  pull_request:
  release:
    types:
      - created
  workflow_dispatch:

jobs:
  format:
    name: Format
    runs-on: ubuntu-latest
    container: ghcr.io/cirruslabs/flutter:3.13.5
    timeout-minutes: 20

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Check format
        run: scripts/check_format.sh

  lint:
    name: Lint
    runs-on: ubuntu-latest
    container: ghcr.io/cirruslabs/flutter:3.13.5
    timeout-minutes: 20

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Get dependencies
        run: flutter pub get
      - name: Lint using flutter analyze
        run: flutter analyze
      - name: Assert that every file that should be public has been exported
        run: scripts/assert_export.sh

  pub-dry-run:
    name: Publish Dry Run
    runs-on: ubuntu-latest
    container: ghcr.io/cirruslabs/flutter:3.13.5
    timeout-minutes: 20

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Run publish dry run
        run: dart pub publish --dry-run

  test-flutter:
    name: Test Flutter
    needs: [ lint, format, pub-dry-run ]
    runs-on: ubuntu-latest
    container: ghcr.io/cirruslabs/flutter:3.13.5
    timeout-minutes: 20

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Get dependencies
        run: flutter pub get
      - name: Run all tests
        run: flutter test --reporter=expanded --coverage
      - name: Check coverage
        run: dart scripts/check_coverage.dart coverage/lcov.info

  test-android:
    name: Test Android
    needs: [ lint, format, pub-dry-run ]
    runs-on: ubuntu-latest
    container: ghcr.io/cirruslabs/flutter:3.13.5
    timeout-minutes: 20
    env:
      GRADLE_VERSION: 7.2

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Cache Gradle
        id: cache-gradle
        uses: actions/cache@v2
        with:
          path: |
            ./example/android/ci-cache/gradle
            ./example/android/gradle/wrapper/gradle-wrapper.jar
            ./example/android/gradlew
          key: ${{ runner.os }}-cache-gradle-${{ env.GRADLE_VERSION }}
      - name: Get dependencies
        run: flutter pub get
      - name: Setup Gradle
        if: steps.cache-gradle.outputs.cache-hit != 'true'
        working-directory: ./example/android
        run: ../../scripts/setup_gradle.sh ${{ env.GRADLE_VERSION }}
      - name: Validate Gradle
        working-directory: ./example/android
        run: dart ../../scripts/check_gradle_version.dart
      - name: Run all tests
        working-directory: ./example/android
        run: ./gradlew :usercentrics_sdk:test

  test-ios:
    name: Test iOS
    needs: [ lint, format, pub-dry-run ]
    runs-on: macos-12
    timeout-minutes: 20

    steps:
      - name: Setup code
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '14.2'
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
      - name: Get dependencies
        run: flutter pub get
      - name: Setup Pods
        working-directory: ./example/ios
        run: pod install
      - name: Run all tests
        working-directory: ./example/ios
        run: ../../scripts/ios_unit_tests.sh

  build-android:
    name: Build Android Example
    needs: [ lint, format, pub-dry-run ]
    runs-on: ubuntu-latest
    container: ghcr.io/cirruslabs/flutter:3.13.5
    timeout-minutes: 20

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Get dependencies
        run: flutter pub get
      - name: Build
        working-directory: ./example
        run: flutter build apk

  build-ios:
    name: Build iOS Example
    needs: [ lint, format, pub-dry-run ]
    runs-on: macos-12
    timeout-minutes: 20

    steps:
      - name: Setup code
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '14.2'
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
      - name: Get dependencies
        run: flutter pub get
      - name: Build
        working-directory: ./example
        run: flutter build ios --debug --no-codesign --simulator

  release:
    name: Release
    permissions:
      id-token: write # Required for authentication using OIDC
      uses: Usercentrics/flutter-sdk/.github/workflows/ci.yml@v1
    if: github.event_name == 'release'
    needs: [ test-flutter, test-android, test-ios, build-android, build-ios ]
    runs-on: ubuntu-latest
    container: ghcr.io/cirruslabs/flutter:3.13.5
    timeout-minutes: 20
    env:
      PUB_DEV_CREDENTIAL: ${{ secrets.PUB_DEV_CREDENTIAL }}
      PUB_DEV_REFRESH_TOKEN: ${{ secrets.PUB_DEV_REFRESH_TOKEN }}
      PUB_DEV_ID_TOKEN: ${{ secrets.PUB_DEV_ID_TOKEN }}
      PUB_DEV_TOKEN_ENDPOINT: ${{ secrets.PUB_DEV_TOKEN_ENDPOINT }}
      PUB_DEV_EXPIRATION: ${{ secrets.PUB_DEV_EXPIRATION }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Validate version
        run: dart scripts/check_release_version.dart ${{ github.ref }}
      - name: Setup credentials
        run: ./scripts/setup_pub_credentials.sh
      - name: Get dependencies
        run: flutter pub get
      - name: Publish
        run: flutter pub publish -f
